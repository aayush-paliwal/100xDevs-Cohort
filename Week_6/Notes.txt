// A re-render means that
1) React did some work to calculate what all should update in this component.
2) The component actually got called.
3) The inspector(react chrome extension) shows you a bounding box around the component

// It happens when
1) A state variable that is being used inside a component changes.
2) A parent component re-render triggers all children re-rendering.

We want to minimize the number of re-renders to make a highly optimal react app.
The more the components, that are getting rendered, the worse


// To prevent unnecessary re-render of the component whose props are not changing, we use memo
memo : memo lets you skip re-rendering of a component when its props are unchanged.


// Memoization
It means remembering some output given an input and not computing it again.

// useCallback
useCallback is not about minimizing the aount of code that is running
It is about not re-rendering a child component, if the function hasn't/doesn't need to change across renders. 
